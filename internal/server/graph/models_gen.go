// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graph

import (
	"time"
)

type CreateRaceResult interface {
	IsCreateRaceResult()
}

type Error interface {
	IsError()
}

type RaceResult interface {
	IsRaceResult()
}

type InvalidIDError struct {
	Message string `json:"message"`
}

func (InvalidIDError) IsRaceResult()       {}
func (InvalidIDError) IsCreateRaceResult() {}
func (InvalidIDError) IsError()            {}

type InvalidRaceDateError struct {
	Message string `json:"message"`
}

func (InvalidRaceDateError) IsCreateRaceResult() {}
func (InvalidRaceDateError) IsError()            {}

type InvalidRaceNameError struct {
	Message string `json:"message"`
}

func (InvalidRaceNameError) IsCreateRaceResult() {}
func (InvalidRaceNameError) IsError()            {}

type RaceAlreadyExists struct {
	Message string `json:"message"`
}

func (RaceAlreadyExists) IsCreateRaceResult() {}
func (RaceAlreadyExists) IsError()            {}

type RaceInput struct {
	ID   string    `json:"id"`
	Name string    `json:"name"`
	Date time.Time `json:"date"`
}

type RaceNotFound struct {
	Message string `json:"message"`
}

func (RaceNotFound) IsRaceResult() {}
func (RaceNotFound) IsError()      {}

type Races struct {
	Races []*Race `json:"races"`
}

type User struct {
	ID    string  `json:"id"`
	Name  string  `json:"name"`
	Races []*Race `json:"races"`
}
