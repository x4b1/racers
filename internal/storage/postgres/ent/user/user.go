// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeRaces holds the string denoting the races edge name in mutations.
	EdgeRaces = "races"

	// Table holds the table name of the user in the database.
	Table = "users"
	// RacesTable is the table the holds the races relation/edge. The primary key declared below.
	RacesTable = "race_competitors"
	// RacesInverseTable is the table name for the Race entity.
	// It exists in this package in order to avoid circular dependency with the "race" package.
	RacesInverseTable = "races"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// RacesPrimaryKey and RacesColumn2 are the table columns denoting the
	// primary key for the races relation (M2M).
	RacesPrimaryKey = []string{"race_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
