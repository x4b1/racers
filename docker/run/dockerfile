FROM golang:1.15-alpine AS builder

# Set necessary environmet variables needed for our image
ENV CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=amd64

# Move to working directory /build
WORKDIR /build

# Copy and download dependency using go mod
COPY go.mod .
COPY go.sum .
RUN go mod download

# Copy the code into the container
COPY . .

# Build the application
RUN go build -o main ./cmd/racers/main.go

# Move to /dist directory as the place for resulting binary folder
WORKDIR /dist

# Copy binary from build to main folder
RUN cp /build/main .
RUN cp -al /build/racers/storage/postgres/migrations ./migrations

############################
# STEP 2 build a small image
############################
FROM scratch

COPY --from=builder /build/main /
COPY --from=builder /build/racers/storage/postgres/migrations /migrations

# Command to run the executable
ENTRYPOINT ["/main"]
